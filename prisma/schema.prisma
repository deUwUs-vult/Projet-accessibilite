// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String        @id @default(cuid())
  name          String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  accounts      Account[]
  sessions      Session[]
  userSurveys   UserSurveys[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Template {
  id              String            @id @default(cuid())
  name            String
  templatesColors TemplatesColors[]
  surveys         Survey[]
}

model TemplatesColors {
  id               String   @id @default(cuid())
  templateId       String
  font             String
  background       String
  secondBackground String
  links            String
  placeholders     String
  template         Template @relation(fields: [templateId], references: [id])
}

model Survey {
  id              String            @id @default(cuid())
  name            String
  description     String
  templateId      String
  template        Template          @relation(fields: [templateId], references: [id])
  surveyQuestions SurveyQuestions[]
  userSurveys     UserSurveys[]
}

model SurveyQuestions {
  id       String          @id @default(cuid())
  surveyId String
  type     String
  question String
  answers  SurveyAnswers[]
  survey   Survey          @relation(fields: [surveyId], references: [id])
}

model SurveyAnswers {
  id               String          @id @default(cuid())
  surveyQuestionId String
  isCorrect        Boolean
  answer           String
  surveyQuestion   SurveyQuestions @relation(fields: [surveyQuestionId], references: [id])
}

model UserSurveys {
  id       String @id @default(cuid())
  userId   String
  surveyId String
  user     User   @relation(fields: [userId], references: [id])
  survey   Survey @relation(fields: [surveyId], references: [id])
}
